{"version":3,"sources":["components/Todo/Todo.js","components/Shape.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["Todo","PropTypes","func","isRequired","arrayOf","object","string","shape","check","deleteTodo","id","isCompleted","bool","todo","className","type","onChange","value","checked","title","onClick","TodoList","todos","filter","FilterTodos","map","key","Header","state","handleChange","event","setState","target","onSubmit","preventDefault","props","addTodo","this","placeholder","React","Component","Footer","filterTodos","clearCompleted","length","name","App","newTodo","prevState","Date","now","markAll","Number","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ddffc75.chunk.js","sourcesContent":["import React from 'react';\nimport { TodoShape } from '../Shape';\n\nexport const Todo = ({ todo, check, deleteTodo }) => (\n  <>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={check}\n        id={todo.id}\n        value={todo.id}\n        checked={todo.isCompleted}\n      />\n      <label>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        value={todo.id}\n        onClick={deleteTodo}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </>\n);\n\nTodo.propTypes = TodoShape.isRequired;\n","import PropTypes, { object } from 'prop-types';\n\nexport const HeaderShape = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport const TodoListShape = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  filter: PropTypes.string.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  check: PropTypes.func.isRequired,\n};\n\nexport const TodoShape = {\n  todo: PropTypes.shape({\n    check: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport const FooterShape = {\n  todos: PropTypes.arrayOf(object).isRequired,\n  filterTodos: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Todo } from '../Todo/Todo';\nimport { TodoListShape } from '../Shape';\n\nexport const TodoList = ({ todos, check, filter, deleteTodo }) => {\n  let FilterTodos = [];\n\n  switch (filter) {\n    case 'All':\n      FilterTodos = todos;\n      break;\n    case 'Active':\n      FilterTodos = todos.filter(todo => !todo.isCompleted);\n      break;\n    case 'Completed':\n      FilterTodos = todos.filter(todo => todo.isCompleted);\n      break;\n    default:\n      return false;\n  }\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        FilterTodos.map(todo => (\n          <li key={todo.id} className={todo.isCompleted ? 'completed' : ''}>\n            <Todo\n              todo={todo}\n              check={check}\n              deleteTodo={deleteTodo}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListShape;\n","import React from 'react';\nimport { HeaderShape } from '../Shape';\n\nexport class Header extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n\n    this.props.addTodo({\n      title,\n      isCompleted: false,\n    });\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>TODOS</h1>\n        <form\n          onSubmit={this.onSubmit}\n        >\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = HeaderShape;\n","import React from 'react';\nimport { FooterShape } from '../Shape';\n\nexport const Footer = ({ todos, filterTodos, clearCompleted }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.isCompleted).length}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <button\n          type=\"button\"\n          className=\"selected\"\n          name=\"All\"\n          onClick={filterTodos}\n        >\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          type=\"button\"\n          name=\"Active\"\n          onClick={filterTodos}\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          type=\"button\"\n          name=\"Completed\"\n          onClick={filterTodos}\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={clearCompleted}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = FooterShape;\n","import React from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\n\nexport class App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'All',\n    checked: false,\n  }\n\n  addTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          ...newTodo,\n          id: Date.now(),\n        },\n      ],\n    }));\n  }\n\n  markAll = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked,\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        isCompleted: !prevState.checked,\n      })),\n    }));\n  }\n\n  filterTodos = (event) => {\n    const { name } = event.target;\n\n    this.setState({\n      filter: name,\n    });\n  }\n\n  deleteTodo = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== Number(value)),\n    }));\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.isCompleted),\n    }));\n  }\n\n  check = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ((todo.id !== Number(value))\n        ? { ...todo }\n        : {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        })),\n    }));\n  }\n\n  render() {\n    const { todos, checked, filter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.markAll}\n            checked={checked}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n          >\n            Mark all as complete\n          </label>\n\n          <TodoList\n            check={this.check}\n            filter={filter}\n            todos={todos}\n            deleteTodo={this.deleteTodo}\n          />\n        </section>\n        <Footer\n          todos={todos}\n          filterTodos={this.filterTodos}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}